<launch>
	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server" args="$(find filter_octomap)/maps/prefilled0.02.ot" output="screen"> 
	<!--
	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server" args="$(find filter_octomap)/maps/exploredMap.ot" output="screen">
	-->
		<param name="resolution" value="0.02" />
		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="world" />
		
		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="2.0" /> <!-- Keep smaller than sensor range, otherwise big "walls" appear -->
		
		<!-- set occupied threshold higher -->
		<param name="sensor_model/hit" value="0.6"/>
		<param name="sensor_model/miss" value="0.4"/>
		<param name="sensor_model/min" value="0.2"/>
		<param name="sensor_model/max" value="0.8"/>
		
		<!-- Speed up by disabeling features -->
		<param name="height_map" value="false"/>
		<param name="occupancy_min_z" value="-1"/> <!-- remove virtually all pts. from the other generated represenations -->
		<param name="occupancy_max_z" value="-0.5"/>
		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="/panda/depth_camera/depth_image/filtered/points" />
	</node>

	<!-- Start map entropy and octomap modifier -->
	<node pkg="filter_octomap" type="planningSceneUpdate_entropyCalc" name="planningSceneUpdate_entropyCalc"/>
	<node pkg="filter_octomap" type="octomap_to_table" name="find_table_in_octomap"/>
	<node pkg="filter_octomap" type="octomap_to_cans" name="find_cans_in_octomap"/>
</launch>
